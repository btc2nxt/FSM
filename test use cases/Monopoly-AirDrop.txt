Use Case: Airdrop for Game Monopoly
------------------------------------------

Airdrop for Game Monopoly drops five package coins, every package has 100 coins and situates 
in different coordinate. Players must go to the sites within eight blocks time, otherwise the 
coins will disappear.
Airdrop search from block N+2  to block N+9  when Predistribute FSM ran at block N, then sends 
to collectors who are in the same site with coordinates the Predistribute FSM announced.

Variables
---------

@00 ==> 0000000000000000	@timestamp
@01 ==> 0100000000000000	@predistributeFSM
@02 ==> 00E40B5402000000	@packageAmt (100 00000000)=0x2540BE400 
@03 ==> 0500000000000000	@MaxPaymentNO (5)
@04 ==> 0000000001000000	@heightRange1 (0x 01 00000000)
@05 ==> 0000000007000000	@heightRange2 (0x 07 00000000)
@06 ==> 0000000000000000	@HaltSteps

Variables(must saved to blockchain)
---------
@07 == A1 
@08 == A2 (x)
@09 == A3 (y)
@0a == A4 (move. @rownum)
@0b == B1 (@recipient)
@0c == B2
@0d == B3
@0e == B4
@0f ==> @timestampBegin
@10 ==> @timestampEnd
@11 ==> @stateId
@12 ==> @count
@13 ==> @airdropAmt
@14 ==> @paymentNo


Script Assembly
---------------

if @timestamp not zero goto init                         1e000000001f
set @timestamp to the timestamp of the current block     35000300000000
minus 10 from @timestamp				 07 00000000 03000000
							 07 00000000 03000000
:init (1f)
get StateId after @timestamp with sender= @predistribute 37 4903 11000000 00000000 01000000
if @stateId =0 finished					 26 11000000
set @timestamp to A1 (hegith of the stateId)		 35 0001 00000000	
set @timestampBegin to @timestamp			 02 0f000000 00000000
add @heightRange1 to @timestampBegin			 06 0f000000 04000000			
set @timestampEnd to @timestamp				 02 10000000 00000000
add @heightRange2 to @timestampEnd			 06 10000000 05000000
set @PaymentNO  to @MaxPaymentNO			 02 14000000 03000000

:loop_payment (67)
if @PaymentNO == 0 finished				 26 14000000
A(x,y) to AT_Payment for StateId, @PaymentNO		 34 4803 11000000 14000000
get move's @count between @timestamps with @x, @y        37 5203 12000000 0f000000 10000000
dec @PaymentNO						 05 14000000
if @count == 0 goto :loop_payment			 1b 12000000 dc
set @airdropAmt to @packageAmt				 02 13000000 02000000
divide @airdropAmt by @count				 09 13000000 12000000
set @rownum to 0 (@A4 =0)				 01 0a000000 0000000000000000

:loop_airdrop (b0)
inc @rownum						 04 0a000000
get next Move to B1 between @timestamp with @x, @y, @row 34 4703 0f000000 10000000
send @airdropAmt  to address in B1			 330204 13000000
@count -1						 05 12000000
if @count>0 goto loop_airdrop				 1e 12000000 e4

halt							 2a
if @PaymentNO >= @MaxPaymentNO goto :finished		 21 14000000 03000000 0f
goto loop_payment					 1a 67000000
finished						 28

machinecode
----------------
1e000000001f35000300000000070000000003000000070000000003000000374903110000000000000001000000261100000035000100000000020f00000000000000060f0000000400000002100000000000000006100000000500000002140000000300000026140000003448031100000014000000375203120000000f0000001000000005140000001b12000000dc021300000002000000091300000012000000010a0000000000000000000000040a0000003447030f000000100000003302041300000005120000001e12000000e42a2114000000030000000f1a6700000028

data
----------------
0000000000000000010000000000000000E40B54020000000500000000000000000000000100000000000000070000000000000000000000

properties
----------------
010000000500000003000000001500000070000000

00000000* BNZ $00000000, :0000001f
00000006  FUN @00000000 768
0000000d  SUB @00000000 @00000003
00000016  SUB @00000000 @00000003
0000001f  FUN @00000011 841 $00000000 $00000001
0000002e  FIZ @00000011
00000033  FUN @00000000 256
0000003a  SET @0000000f $00000000
00000043  ADD @0000000f @00000004
0000004c  SET @00000010 $00000000
00000055  ADD @00000010 @00000005
0000005e  SET @00000014 $00000003
00000067  FIZ @00000014
0000006c  FUN 840 $00000011 $00000014
00000077  FUN @00000012 850 $0000000f $00000010
00000086  DEC @00000014
0000008b  BZR $00000012, :00000067
00000091  SET @00000013 $00000002
0000009a  DIV @00000013 @00000012
000000a3  SET @0000000a #0000000000000000
000000b0  INC @0000000a
000000b5  FUN 839 $0000000f $00000010
000000c0  FUN 1026 $00000013
000000c7  DEC @00000012
000000cc  BNZ $00000012, :000000b0
000000d2  HLT

000000d3  BGE $00000014 $00000003 :000000e2
000000dd  JMP :      67
000000e2  FIN
